package com.training.pojos;

public class Account {
	private long accNum;
	protected double balance;
	private Person3 accHolder=new Person3();
	
	public Account() {
		
	}

	public Account(long accNum, double balance, Person3 accHolder) {
		this.accNum = accNum;
		this.balance = balance;
		this.accHolder = accHolder;
	}

	public long getAccNum() {
		return accNum;
	}

	public void setAccNum(long accNum) {
		this.accNum = accNum;
	}

	public double getBalance() {
		return balance;
	}

	public void setBalance(double balance) {
		this.balance = balance;
	}

	public Person3 getAccHolder() {
		return accHolder;
	}

	public void setAccHolder(Person3 accHolder) {
		this.accHolder = accHolder;
	}
	
	public void deposit(double amount) {
		if(amount>0) {
			balance+=amount;
		}
	}
	public void withdraw(double amount) {
		if(amount>0) {
			balance-=amount;
		}
	}

	@Override
	public String toString() {
		return "accNum= " + accNum + "\nbalance= " + balance + "\naccHolder: " + accHolder;
	}

}





package com.training.pojos;

public class Person3 {
	private String name;
	private float age;
	
	public Person3() {
		
	}

	@Override
	public String toString() {
		return "\nname= " + name + "\nage=" + age;
	}

	public Person3(String name, float age) {
		this.name = name;
		this.age = age;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public float getAge() {
		return age;
	}

	public void setAge(float age) {
		this.age = age;
	}

}





package com.training.service;
import com.training.pojos.Account;
public class CurrentAccount extends Account {
	
	final public double OVERDRAFTLIMIT = 50000;
	
	public boolean checkODF(double amount) {
		boolean flag = false;
		if(amount <= (balance+OVERDRAFTLIMIT)) {
			flag = true;
		}
		return flag;
	}
	
	@Override
	public void withdraw(double amount) {
		if(amount>0 && checkODF(amount)) {
			balance-=amount;
		}
	}
	
	
}





package com.training.service;
import com.training.pojos.Account;
public class SavingsAccount extends Account {
	final double MINBALANCE = 500;
	@Override
	public void withdraw(double amount) {
		if(amount>0 && balance>=MINBALANCE) {
			balance-=amount;
		}
	}

}





package com.training.pl;

import java.util.Random;
import java.util.Scanner;

import com.training.pojos.Account;

public class AccountApp {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		Account a1 = new Account();
		a1.getAccHolder().setName("Smith");
		a1.getAccHolder().setAge(20.0f);
		a1.setBalance(2000);
		Random rand = new Random();
		a1.setAccNum(rand.nextInt(10000));

		Account a2 = new Account();
		a2.getAccHolder().setName("Kathy");
		a2.getAccHolder().setAge(22.0f);
		a2.setBalance(3000);
		a2.setAccNum(rand.nextInt(10000));
		
		a1.deposit(2000);
		a2.withdraw(2000);
		System.out.println(a1);
		System.out.println(a2);

		sc.close();
		// TODO Auto-generated method stub

	}

}
